name: swift-win-x64-vs2019
on: [push]

env:
  ICU_VERSION: 64
  
jobs:
  icu:

    runs-on: windows-latest
#     env:
#       ARTIFACTS_PATH: ${{ env.GITHUB_WORKSPACE }}\a
#       INSTALL_PATH: ${{ ARTIFACTS_PATH }}\Library\icu-${{ ICU_VERSION }}\usr
      
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Checkout ICU
        uses: actions/checkout@v2
        with:
          repository: 'unicode-org/icu'
          ref: 'maint/maint-64'
          fetch-depth: 1
          path: 'icu'
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64
      - name: Prepare CMake Environment
        shell: cmd
        run: |
          echo %INSTALL_PATH%
          copy cmake\ICU\CMakeLists.txt icu\icu4c
          mkdir b
      - name: Configure ICU
        shell: cmd
        working-directory: b
        run: |
          subst T: "%GITHUB_WORKSPACE%\icu\icu4c"
          cmake -C %GITHUB_WORKSPACE%\cmake\caches\windows-x86_64.cmake -G Ninja T:\ -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=%GITHUB_WORKSPACE%\Library\icu\usr -DBUILD_SHARED_LIBS=YES -DBUILD_TOOLS=YES
      - name: Build ICU
        shell: cmd
        run: |
          cmake --build %GITHUB_WORKSPACE%\b
      - name: Install ICU
        shell: cmd
        run: |
          cmake --build %GITHUB_WORKSPACE%\b --target install

  curl:

    runs-on: windows-latest
    needs: [zlib]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checkout curl
        uses: actions/checkout@v2
        with:
          repository: 'curl/curl'
          ref: 'master'
          fetch-depth: 1
          path: 'curl'
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64

  libxml2:

    runs-on: windows-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Checkout libxml2
        uses: actions/checkout@v2
        with:
          repository: 'compnerd/libxml2'
          ref: 'cmake'
          fetch-depth: 1
          path: 'libxml2'
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64

  zlib:

    runs-on: windows-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Checkout zlib
        uses: actions/checkout@v2
        with:
          repository: 'madler/zlib'
          ref: 'refs/tags/v1.2.11'
          fetch-depth: 1
          path: 'zlib'
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64

  toolchain:

    runs-on: windows-latest
    needs: [icu]
    
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Configure Git
        run: |
          git config --global --add core.autocrlf false
          git config --global --add core.symlinks true
        shell: cmd
      - name: Checkout LLVM
        uses: actions/checkout@v2
        with:
          repository: 'apple/llvm-project'
          ref: 'swift/master'
          fetch-depth: 1
          path: 's/toolchain' 
      - name: Checkout cmark
        uses: actions/checkout@v2
        with:
          repository: 'apple/swift-cmark'
          ref: 'master'
          fetch-depth: 1
          path: 's/toolchain/cmark' 
      - name: Checkout libdispatch
        uses: actions/checkout@v2
        with:
          repository: 'apple/swift-corelibs-libdispatch'
          ref: 'master'
          fetch-depth: 1
          path: 's/swift-corelibs-libdispatch' 
      - name: Checkout swift
        uses: actions/checkout@v2
        with:
          repository: 'apple/swift'
          ref: 'master'
          fetch-depth: 1
          path: 's/toolchain/swift'
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64

  sdk:

    runs-on: windows-latest
    needs: [icu, curl, libxml2, toolchain]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure x64 Build Environment
        shell: cmd
        run: .github\workflows\vsenv.cmd -arch=x64 -host_arch=x64
